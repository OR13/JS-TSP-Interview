var TSPI;!function(t){var e;!function(t){"use strict";var e=function(){function t(t){t.date=new Date}return t.$inject=["$scope"],t}();t.NavbarCtrl=e}(e=t.Controllers||(t.Controllers={}))}(TSPI||(TSPI={}));var TSPI;!function(TSPI){var Controllers;!function(Controllers){"use strict";var InterviewController=function(){function InterviewController($scope){var _this=this;this.run=function(){console.log("running ",_this),_this.iteration=0,eval(_this.aceModel.toString()),_this.runIterations()},this.selectPath=function(t){_this.selectedPath=t},this.isActivePath=function(t){return _this.selectedPath===t},this.reload=function(){console.log("reloading ",_this),_this.iteration=0,_this.shortestPathDistance=-1,_this.shortestPath=null,_this.shortestPaths=[],_this.map=new TSPI.TSPIMap(_this.numCities)},this.runIterations=function(){return _this.iteration>=_this.maxIterations?void console.info("Done: ",_this):(_this.salesman=new TSPI.TSPISalesman,_this.salesman.getPathToAllCities(_this.map,_this.iteration),(_this.salesman.currentPathDistance<_this.shortestPathDistance||-1===_this.shortestPathDistance)&&(_this.shortestPath=new TSPI.TSPIPath(_this.salesman.currentPath,_this.salesman.currentPathDistance,_this.iteration),_this.selectedPath=_this.shortestPath,_this.shortestPathDistance=_this.shortestPath.distance,_this.shortestPaths.push(_this.shortestPath),_this.salesman.rankEdgeMapCities(_this.shortestPath)),_this.iteration++,_this.scope.safeApply(),void setTimeout(_this.runIterations,1e3/_this.iterationsPerSecond))},this.iteration=0,this.maxIterations=1e3,this.shortestPathDistance=-1,this.shortestPath=null,this.shortestPaths=[],this.iterationsPerSecond=10,this.numCities=10,this.map=new TSPI.TSPIMap(this.numCities),this.scope=$scope,$scope.safeApply=function(t){var e=this.$root.$$phase;"$apply"===e||"$digest"===e?t&&"function"==typeof t&&t():this.$apply(t)},this.aceOptions={useWrapMode:!0,showGutter:!1,theme:"chrome",mode:"javascript",firstLineNumber:5,onLoad:function(t){t.setReadOnly(!1),t.$blockScrolling=1/0},onChange:function(){}},this.aceModel="\n\n// A salesmen always travels to the city with the highest score.\n// Distance is the distance from the salesman's current city to the city being scored.\n// Rank is 1 + the number of salesmen who have found a shortest path passing through the city being scored.\n// Iteration is the number of salesmen who have tried to find a shortest path.\n\nwindow.scoreCity = function(distance, rank, iteration){\n\n    if (iteration === 0) {\n        return 1 / distance;\n    }\n\n    var rand = Math.random();\n\n    if (rand > .5) {\n        return rank * (Math.random() * 20) / distance;\n    } else {\n        return (1 / distance) * rank;\n    }\n\n}\n\n"}return InterviewController.$inject=["$scope"],InterviewController}();Controllers.InterviewController=InterviewController}(Controllers=TSPI.Controllers||(TSPI.Controllers={}))}(TSPI||(TSPI={}));var TSPI;!function(t){"use strict";var e=function(){function e(){this.currentPath=[],this.currentPathDistance=0,this.map=null}return e.prototype.updateRemainingCitiesFrom=function(t){var e=this;null==e.map&&(e.map=t),this.remainingCities=_.filter(t.cities,function(t){return!_.contains(e.currentPath,t)})},e.prototype.getPathToAllCities=function(t,e){var i=t.cities[Math.floor(Math.random()*t.cities.length)];for(this.travelToCity(i),this.updateRemainingCitiesFrom(t);0!==this.remainingCities.length;){var n=this.smartlyChooseNextCity(this.remainingCities,e);this.travelToCity(n),this.updateRemainingCitiesFrom(t)}return this.travelToCity(this.currentPath[0]),this.currentPath},e.prototype.travelToCity=function(t){0===this.currentPath.length?(this.currentPath.push(t),this.currentPathDistance=0):(this.currentPathDistance+=this.currentCity.getDistanceFrom(t),this.currentPath.push(t)),this.currentCity=this.currentPath[this.currentPath.length-1]},e.prototype.smartlyChooseNextCity=function(t,e){var i=this,n=t[Math.floor(Math.random()*t.length)],r=this.scoreCityCandidate(n,e),a=n;return t.forEach(function(t){var n=i.scoreCityCandidate(t,e);n>r&&(a=t,r=n)}),a},e.prototype.scoreCityCandidate=function(t,e){var i=this,n=i.getOrCreateEdge(this.currentCity,t),r=window.scoreCity(n.destination,n.rank,e);return r},e.prototype.getOrCreateEdge=function(e,i){var n=this,r=""+e.cityId+"->"+i.cityId,a=n.map.edgeMap[r];return"undefined"==typeof a&&(a=new t.TSPIEdge(e,i,e.getDistanceFrom(i),1)),n.map.edgeMap[r]=a,a},e.prototype.rankEdgeMapCities=function(e){for(var i=this,n=0;n<e.cities.length-1;n++){var r=e.cities[n],a=e.cities[n+1],s=""+r.cityId+"->"+a.cityId,o=i.map.edgeMap[s];"undefined"==typeof o?o=new t.TSPIEdge(r,a,r.getDistanceFrom(a),2):o.rank+=1,i.map.edgeMap[s]=o}},e}();t.TSPISalesman=e}(TSPI||(TSPI={}));var TSPI;!function(t){"use strict";var e=function(){function e(e){this.edgeMap={},this.cities=[];for(var i=function(t,e){return Math.random()*(e-t)+1+t},n=$(".tspi-map")[0].offsetWidth-50,r=0;e>r;r++){var a=new t.TSPICity(r,"black",i(9,n),i(8,248));this.cities.push(a)}}return e}();t.TSPIMap=e}(TSPI||(TSPI={}));var TSPI;!function(t){var e;!function(t){"use strict";function e(){return{restrict:"E",scope:!0,template:'<div id="tspi-map-container"></div>',replace:!0,link:function(t){var e=$(".tspi-map")[0].offsetWidth;t.ui={},t.ui.svgContainer=d3.select("#tspi-map-container").append("svg"),t.ui.svgContainer.attr("width",e).attr("height",256),t.ui.drawCities=function(){t.ui.svgContainer.selectAll("line").remove(),t.ui.svgContainer.selectAll("circle").remove(),t.ui.svgContainer.selectAll("circle").data(t.$parent.InterviewController.map.cities).enter().append("circle").attr("cx",function(t){return t.x_axis}).attr("cy",function(t){return t.y_axis}).attr("r",function(){return 4}).style("fill",function(t){return t.color})},t.ui.drawPath=function(e){t.ui.svgContainer.selectAll("line").remove();for(var i=d3.scale.category10(),n=0;n<e.length-1;n++){var r=e[n],a=e[n+1],s=t.$parent.InterviewController.salesman.getOrCreateEdge(r,a);t.ui.svgContainer.append("line").style("stroke",i(s.rank)).style("stroke-width",2).attr("x1",r.x_axis).attr("y1",r.y_axis).attr("x2",a.x_axis).attr("y2",a.y_axis)}},t.$parent.$watch("InterviewController.map.cities",function(){t.ui.drawCities()}),t.$parent.$watch("InterviewController.selectedPath",function(e){e&&t.ui.drawPath(e.cities)})}}}t.tspiMap=e}(e=t.Directives||(t.Directives={}))}(TSPI||(TSPI={}));var TSPI;!function(t){"use strict";var e=function(){function t(t,e,i,n){var r=this;void 0===t&&(t=0),void 0===e&&(e="purple"),void 0===i&&(i=50),void 0===n&&(n=50),this.getDistanceFrom=function(t){var e=t.x_axis-r.x_axis,i=t.y_axis-r.y_axis,n=Math.sqrt(Math.pow(e,2)+Math.pow(i,2));return n},this.cityId=t,this.color=e,this.x_axis=i,this.y_axis=n}return t}();t.TSPICity=e}(TSPI||(TSPI={}));var TSPI;!function(t){"use strict";var e=function(){function t(t,e,i,n){void 0===i&&(i=-1),void 0===n&&(n=-1),this.source=t,this.destination=e,this.distance=i,this.rank=n}return t}();t.TSPIEdge=e;var i=function(){function t(t,e,i){void 0===t&&(t=[]),void 0===e&&(e=-1),void 0===i&&(i=0),this.cities=t,this.distance=e,this.iteration=i}return t}();t.TSPIPath=i}(TSPI||(TSPI={}));var TSPI;!function(t){"use strict";angular.module("TSPI",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngResource","ui.router","ui.bootstrap","ui.sortable","ui.ace","firebase"]).controller(t.Controllers).directive(t.Directives).config(["$locationProvider","$stateProvider","$urlRouterProvider",function(t,e,i){t.html5Mode(!0),e.state("interview",{url:"/interview",templateUrl:"app/interview/interview.html",controller:"InterviewController",controllerAs:"InterviewController"}),i.otherwise("/interview")}])}(TSPI||(TSPI={})),angular.module("TSPI").run(["$templateCache",function(t){t.put("app/interview/interview.html",'<div class="container"><div class="col-sm-12 col-md-12 col-lg-12"><h2>Ants & Salesmen</h2><p class="lead">In this <a href="https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms" target="_blank">Ant Colony Optimization</a> variation on the classic <a href="https://en.wikipedia.org/wiki/Travelling_salesman_problem" target="_blank">Traveling Salesman Problem</a>, we seek to define a heuristic function \'scoreCity\', used by a salesman at each city to determine which of the remaining cities to travel to next.</p></div><div class="col-sm-9 col-md-9 col-lg-9"><tspi-map style="margin-top: 16px;" map="InterviewController.map" class="tspi-map col-sm-12 col-md-12 col-lg-12"></tspi-map><div ui-ace="InterviewController.aceOptions" ng-model="InterviewController.aceModel" class="col-sm-12 col-md-12 col-lg-12" style="margin-top: 16px"></div></div><div class="col-sm-3 col-md-3 col-lg-3"><form class="form-inline" style="margin-top: 16px;"><button class="btn btn-danger" ng-click="InterviewController.reload()"><i class="fa fa-refresh"></i> Reset Map</button> <button class="btn btn-primary pull-right" ng-click="InterviewController.run()"><i class="fa fa-gear"></i> Run Program</button><div class="input-group col-xs-12" style="margin-top: 16px"><div class="input-group-addon">Iterations</div><input type="number" class="form-control" ng-model="InterviewController.maxIterations"></div><div class="input-group col-xs-12" style="margin-top: 16px"><div class="input-group-addon">Cities</div><input type="number" class="form-control" ng-model="InterviewController.numCities"></div><div class="input-group col-xs-12" style="margin-top: 16px"><div class="input-group-addon">Speed</div><input type="number" class="form-control" ng-model="InterviewController.iterationsPerSecond"></div></form><div class="tspi-metrics" style="margin-top: 32px;" ng-show="InterviewController.shortestPath"><table class="table table-bordered table-hover"><tr><th>Distance</th><th>Iteration</th></tr><tr ng-repeat="path in InterviewController.shortestPaths | orderBy:\'distance\'" ng-click="InterviewController.selectPath(path)" style="cursor: pointer;" ng-class="{\'active\': InterviewController.isActivePath(path)}"><td>{{path.distance }}</td><td>{{path.iteration}}</td></tr></table><p class="text-center"><small>{{InterviewController.iteration}} of {{InterviewController.maxIterations}}</small></p></div></div></div>'),t.put("app/components/footer/footer.html",'<div class="footer"><ul class="nav nav-pills"><li ui-sref-active="active" role="presentation"><a ui-sref="typescript"><i class="fa fa-windows"></i> TypeScript</a></li><li ui-sref-active="active" role="presentation"><a ui-sref="coffeescript"><i class="fa fa-coffee"></i> CoffeeScript</a></li><li ui-sref-active="active" role="presentation"><a ui-sref="developer-features"><i class="fa fa-code"></i> Dev Features</a></li><li role="presentation"><a href="https://github.com/OR13/TSPI" target="_blank"><i class="fa fa-github"></i> View Source</a></li></ul></div>'),t.put("app/components/navbar/navbar.html",'<nav class="navbar navbar-static-top navbar-default" ng-controller="NavbarCtrl"><div class="container"><div class="navbar-header"><a class="navbar-brand" href="/"><span class="fa fa-life-bouy"></span> TypeScript + CoffeeScript</a></div></div></nav>')}]);